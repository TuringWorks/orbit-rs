---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: orbit-server
  namespace: orbit-rs
  labels:
    app.kubernetes.io/name: orbit-rs
    app.kubernetes.io/component: server
    app.kubernetes.io/version: "0.1.0"
spec:
  serviceName: orbit-server-headless
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: orbit-rs
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: orbit-rs
        app.kubernetes.io/component: server
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: orbit-server
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: orbit-server
        image: orbit-rs/orbit-server:latest
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash"]
        args: ["/app/scripts/entrypoint.sh"]
        ports:
        - name: grpc
          containerPort: 50051
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: RUST_LOG
          value: "info"
        - name: RUST_BACKTRACE
          value: "1"
        # Universal Election Manager Configuration
        - name: DEPLOYMENT_MODE
          value: "kubernetes"
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVICE_ACCOUNT
          value: "orbit-server"
        - name: ORBIT_REPLICA_COUNT
          value: "3"
        - name: ORBIT_DISCOVERY_DNS
          value: "orbit-server-headless.orbit-rs.svc.cluster.local"
        - name: ORBIT_ELECTION_METHOD
          value: "kubernetes"
        - name: ORBIT_ENABLE_RAFT_FALLBACK
          value: "true"
        - name: ORBIT_LEASE_DURATION
          value: "30"
        - name: ORBIT_RENEW_DEADLINE
          value: "20"
        - name: ORBIT_RETRY_PERIOD
          value: "5"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: health
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health/ready
            port: health
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health/startup
            port: health
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
          successThreshold: 1
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: scripts
          mountPath: /app/scripts
          readOnly: true
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: orbit-server-config
          defaultMode: 0644
      - name: scripts
        configMap:
          name: orbit-server-scripts
          defaultMode: 0755
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - orbit-rs
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - server
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      tolerations:
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      terminationGracePeriodSeconds: 60
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: orbit-rs
        app.kubernetes.io/component: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: orbit-rs-ssd
      resources:
        requests:
          storage: 10Gi
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1