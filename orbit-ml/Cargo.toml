[package]
name = "orbit-ml"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
description = "Machine Learning and Deep Learning engine for Orbit database"
repository.workspace = true

[features]
default = ["neural-networks", "transformers", "graph-neural-networks"]
neural-networks = []
transformers = [] # Dependencies commented out for initial build
graph-neural-networks = []
python = ["pyo3"] # Python integration with PyO3
javascript = [] # Dependencies commented out for initial build
lua = [] # Dependencies commented out for initial build
gpu = ["candle-core", "candle-nn"] # GPU acceleration with Candle
distributed = [] # Dependencies commented out for initial build
industry-healthcare = []
industry-fintech = []
industry-adtech = []
industry-defense = []
industry-logistics = []
industry-banking = []
industry-insurance = []

[dependencies]
# Core workspace dependencies
anyhow.workspace = true
thiserror.workspace = true
tokio.workspace = true
serde.workspace = true
serde_json.workspace = true
tracing.workspace = true
uuid.workspace = true
chrono.workspace = true
dashmap.workspace = true
futures.workspace = true
once_cell.workspace = true
async-trait.workspace = true

# Machine Learning Core - using latest stable version
candle-core = { version = "0.9", optional = true }
candle-nn = { version = "0.9", optional = true }
# candle-datasets = "0.7"
# linfa = "0.7"
# linfa-clustering = "0.7"
# linfa-linear = "0.7" 
# linfa-trees = "0.7"
# linfa-bayes = "0.7"
# linfa-svm = "0.7"
# smartcore = "0.3"
ndarray = { version = "0.15", features = ["serde"] }

# Deep Learning Extensions (commented out for initial build)
# candle-cuda = { version = "0.7", optional = true }
# candle-flash-attn = { version = "0.7", optional = true }
# cudarc = { version = "0.12", optional = true }

# NLP and Transformers (commented out for initial build)
# tokenizers = { version = "0.19", optional = true }
# hf-hub = { version = "0.3", optional = true }

# Graph Processing
petgraph = "0.6"

# Multi-language Support (commented out for initial build)
# pyo3 = { version = "0.22", features = ["auto-initialize"], optional = true }
# numpy = { version = "0.22", optional = true }
# deno_core = { version = "0.312", optional = true }
# v8 = { version = "0.104", optional = true }
# mlua = { version = "0.9", features = ["lua54", "async"], optional = true }

# Distributed Computing (commented out for initial build)
# mpi = { version = "0.6", optional = true }

# Data Processing (commented out due to dependency conflicts)
# polars = { version = "0.41", features = ["lazy", "sql", "parquet"] }
# arrow = "52.0"

# Statistical Computing
statrs = "0.17"
rand = "0.8"
rand_distr = "0.4"

# Performance
rayon = "1.10"
crossbeam = "0.8"

# Serialization
bincode = "1.3"
rmp-serde = "1.3"

# Configuration
config = "0.14"

# Metrics and Monitoring
prometheus = "0.14"
# PyO3 for Python integration - only enabled with python feature
pyo3 = { workspace = true, optional = true }

[dev-dependencies]
# Testing dependencies
mockall.workspace = true
tokio-test.workspace = true
proptest.workspace = true
cucumber.workspace = true
criterion = "0.7"
tempfile = "3.0"
approx = "0.5"

[build-dependencies]
tonic-build = "0.14"
prost-build = "0.13"

# [[bin]]
# name = "orbit-ml-cli"
# path = "src/bin/cli.rs"
# required-features = []

# [[bin]]
# name = "orbit-ml-server"
# path = "src/bin/server.rs"
# required-features = []

[lib]
name = "orbit_ml"
path = "src/lib.rs"

# Benchmarks (commented out until files are created)
# [[bench]]
# name = "neural_network_benchmark"
# harness = false
# path = "benchmarks/neural_network_benchmark.rs"

# [[bench]]
# name = "transformer_benchmark"
# harness = false
# path = "benchmarks/transformer_benchmark.rs"

# [[bench]]
# name = "graph_neural_network_benchmark"
# harness = false
# path = "benchmarks/graph_neural_network_benchmark.rs"

# Examples (commented out until files are created)
# [[example]]
# name = "healthcare_demo"
# path = "examples/healthcare_demo.rs"
# required-features = ["industry-healthcare"]

# [[example]]
# name = "fintech_demo"
# path = "examples/fintech_demo.rs"
# required-features = ["industry-fintech"]

# [[example]]
# name = "neural_network_demo"
# path = "examples/neural_network_demo.rs"
# required-features = ["neural-networks"]

# [[example]]
# name = "transformer_demo"
# path = "examples/transformer_demo.rs"
# required-features = ["transformers"]

# [[example]]
# name = "graph_neural_network_demo"
# path = "examples/graph_neural_network_demo.rs"
# required-features = ["graph-neural-networks"]

# [[example]]
# name = "python_integration_demo"
# path = "examples/python_integration_demo.rs"
# required-features = ["python"]

# [[example]]
# name = "multi_language_demo"
# path = "examples/multi_language_demo.rs"
# required-features = ["python", "javascript", "lua"]
