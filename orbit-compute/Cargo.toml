[package]
name = "orbit-compute"
version = "0.1.0"
edition = "2021"
authors = ["TuringWorks Team <team@turingworks.com>"]
description = "Heterogeneous computing acceleration for Orbit-RS with SIMD, GPU, and Neural Engine support"
license = "MIT OR Apache-2.0"
repository = "https://github.com/TuringWorks/orbit-rs"
keywords = ["distributed", "actor", "database", "simd", "gpu", "acceleration"]
categories = ["database-implementations", "concurrency", "hardware-support"]

[features]
default = ["cpu-simd", "runtime-detection"]

# CPU acceleration features
cpu-simd = ["cpu-simd-avx2", "cpu-simd-avx512"]
cpu-simd-avx2 = []
cpu-simd-avx512 = []
cpu-simd-arm-neon = []
cpu-simd-arm-sve = []

# GPU acceleration features (placeholder - real dependencies commented out)
gpu-acceleration = ["gpu-metal", "gpu-cuda", "gpu-rocm", "gpu-opencl", "gpu-vulkan"]
gpu-metal = [] # Apple Metal (dependencies commented out)
gpu-cuda = [] # NVIDIA CUDA (dependencies commented out)
gpu-rocm = [] # AMD ROCm (dependencies commented out)
gpu-opencl = [] # Cross-platform OpenCL (dependencies commented out)
gpu-vulkan = [] # Cross-platform Vulkan compute (dependencies commented out)

# Neural engine features (placeholder - real dependencies commented out)
neural-acceleration = ["neural-apple", "neural-qualcomm", "neural-intel"]
neural-apple = [] # Apple Neural Engine (dependencies commented out)
neural-qualcomm = [] # Snapdragon AI Engine (dependencies commented out)
neural-intel = [] # Intel Neural Compute (dependencies commented out)

# ARM-specific features
arm-specialization = ["cpu-simd-arm-neon", "cpu-simd-arm-sve", "neural-qualcomm"]
apple-silicon = ["gpu-metal", "neural-apple", "unified-memory"]
snapdragon = ["gpu-opencl", "neural-qualcomm", "arm-specialization"]

# Memory and runtime features
unified-memory = [] # Apple Silicon unified memory optimization
runtime-detection = ["raw-cpuid"] # Runtime CPU feature detection
zero-copy = [] # Zero-copy optimizations where possible
benchmarks = [] # Enable benchmarking functionality

[dependencies]
# Core dependencies
orbit-shared = { path = "../orbit-shared" }
orbit-util = { path = "../orbit-util" }

# Async runtime
tokio = { workspace = true, features = ["full"] }
futures = "0.3"

# Serialization
serde = { workspace = true, features = ["derive"] }
serde_json = "1.0"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Mathematics and algorithms
nalgebra = "0.32"
ndarray = "0.15"
num-traits = "0.2"
num-complex = "0.4"

# SIMD intrinsics
# CPU feature detection
raw-cpuid = { version = "11.0", optional = true }

# Apple ecosystem (macOS/iOS)
# metal = { version = "0.27", optional = true }
# objc = { version = "0.2", optional = true }
# core-foundation = { version = "0.9", optional = true }
# core-ml = { version = "0.1", optional = true }
# metal-performance-shaders = { version = "0.4", optional = true }

# NVIDIA CUDA
# cudarc = { version = "0.11", features = ["std", "cuda-11080"], optional = true }

# AMD ROCm/HIP
# hip-runtime-sys = { version = "0.3", optional = true }
# rocblas-sys = { version = "0.1", optional = true }

# Cross-platform GPU compute
# opencl3 = { version = "0.9", optional = true }
# vulkano = { version = "0.34", optional = true }

# ARM/Qualcomm specific (hypothetical crates for demonstration)
# hexagon-sdk = { version = "0.1", optional = true }

# Intel Neural Compute
# openvino = { version = "0.7", optional = true }

# Logging and metrics
tracing = { workspace = true }
metrics = "0.22"

# Memory management
memmap2 = "0.9"
aligned-vec = "0.5"

# System monitoring
libc = "0.2"
num_cpus = "1.16"
rand = "0.8"

# Benchmarking
criterion = { version = "0.7", features = ["html_reports"], optional = true }

[target.'cfg(target_arch = "x86_64")'.dependencies]
# x86-64 specific SIMD intrinsics are built-in to std::arch

[target.'cfg(target_arch = "aarch64")'.dependencies]  
# ARM NEON intrinsics are built-in to std::arch

# [target.'cfg(target_os = "macos")'.dependencies]
# # Additional macOS-specific dependencies
# cocoa = "0.25"
# core-graphics = "0.23"

# [target.'cfg(target_os = "linux")'.dependencies]
# # Linux-specific GPU libraries
# libdrm-sys = { version = "0.7", optional = true }

[target.'cfg(target_os = "windows")'.dependencies]
# Windows-specific system monitoring and GPU libraries  
windows = { version = "0.52", features = [
    "Win32_Foundation",
    "Win32_System_Performance",
    "Win32_System_SystemInformation",
    "Win32_System_Power",
    "Win32_System_WindowsProgramming",
    "Win32_System_Registry", 
    "Win32_Graphics_Direct3D11",
    "Win32_Graphics_Direct3D12", 
    "Win32_Graphics_Dxgi",
    "Win32_Graphics_Gdi",
    "Win32_Storage_FileSystem",
    "Win32_Security",
    "Win32_System_Threading",
    "Win32_System_ProcessStatus",
    "Win32_System_SystemServices",
] }
wmi = "0.13"
sysinfo = "0.30"

[dev-dependencies]
criterion = { version = "0.7", features = ["html_reports"] }
proptest = "1.0"
tempfile = "3.0"
env_logger = "0.10"

# [[bench]]
# name = "simd_operations"
# harness = false
# required-features = ["cpu-simd"]

# [[bench]]
# name = "gpu_acceleration" 
# harness = false
# required-features = ["gpu-acceleration"]

# [[bench]]
# name = "heterogeneous_query"
# harness = false
# required-features = ["gpu-acceleration", "cpu-simd"]

[package.metadata.docs.rs]
features = ["cpu-simd", "gpu-metal", "neural-apple"]
targets = ["x86_64-unknown-linux-gnu", "x86_64-apple-darwin", "aarch64-apple-darwin"]