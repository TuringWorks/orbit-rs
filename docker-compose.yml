version: '3.8'

services:
  orbit-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    deploy:
      replicas: 3
    environment:
      # Universal Election Manager Configuration
      - DEPLOYMENT_MODE=docker_compose
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-orbit-rs}
      - COMPOSE_SERVICE=orbit-server
      - ORBIT_REPLICA_COUNT=3
      - ORBIT_DISCOVERY_DNS=orbit-server
      - ORBIT_ELECTION_METHOD=raft
      - ORBIT_ENABLE_RAFT_FALLBACK=false
      
      # Node Configuration
      - RUST_LOG=info
      - RUST_BACKTRACE=1
      - ORBIT_NODE_ID=orbit-server-${HOSTNAME}
      - ORBIT_CLUSTER_NAME=orbit-compose-cluster
      
      # Network Configuration
      - ORBIT_GRPC_PORT=50051
      - ORBIT_HEALTH_PORT=8080
      - ORBIT_METRICS_PORT=9090
      
      # Election Timing
      - ORBIT_ELECTION_TIMEOUT_MIN=150ms
      - ORBIT_ELECTION_TIMEOUT_MAX=300ms
      - ORBIT_HEARTBEAT_INTERVAL=50ms
      
      # Storage Configuration
      - ORBIT_DATA_DIR=/app/data
      - ORBIT_ELECTION_STATE_PATH=/app/data/election-state.json
      - ORBIT_TRANSACTION_LOG_PATH=/app/data/transactions.db
      
    ports:
      - "50051"  # gRPC port (internal)
      - "8080"   # Health check port
      - "9090"   # Metrics port
    volumes:
      - orbit_data:/app/data
      - orbit_logs:/app/logs
    networks:
      - orbit-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Load balancer for external access
  orbit-lb:
    image: nginx:alpine
    ports:
      - "50051:50051"  # gRPC
      - "8080:8080"    # Health checks
      - "9090:9090"    # Metrics
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - orbit-network
    depends_on:
      - orbit-server
    restart: unless-stopped

  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - orbit-network
    restart: unless-stopped

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - orbit-network
    restart: unless-stopped

networks:
  orbit-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  orbit_data:
    driver: local
  orbit_logs:
    driver: local  
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

---
# Override for development environment
version: '3.8'
services:
  orbit-server:
    environment:
      - RUST_LOG=debug
      - ORBIT_REPLICA_COUNT=1
      - ORBIT_ELECTION_TIMEOUT_MIN=50ms
      - ORBIT_ELECTION_TIMEOUT_MAX=100ms
    deploy:
      replicas: 1

---  
# Override for production environment
version: '3.8'
services:
  orbit-server:
    environment:
      - RUST_LOG=warn
      - ORBIT_REPLICA_COUNT=5
      - ORBIT_ELECTION_TIMEOUT_MIN=200ms
      - ORBIT_ELECTION_TIMEOUT_MAX=400ms
      - ORBIT_ENABLE_TLS=true
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 60s
        max_failure_ratio: 0.3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s