syntax = "proto3";

package orbit.consensus;

// Raft consensus service
service RaftConsensus {
    // Request vote from a candidate
    rpc RequestVote(VoteRequestProto) returns (VoteResponseProto);
    
    // Append entries (including heartbeats)
    rpc AppendEntries(AppendEntriesRequestProto) returns (AppendEntriesResponseProto);
}

// Vote request message
message VoteRequestProto {
    uint64 term = 1;
    string candidate_id = 2;
    uint64 last_log_index = 3;
    uint64 last_log_term = 4;
}

// Vote response message
message VoteResponseProto {
    uint64 term = 1;
    bool vote_granted = 2;
    string voter_id = 3;
}

// Log entry for Raft
message LogEntryProto {
    uint64 term = 1;
    uint64 index = 2;
    string command = 3;
    int64 timestamp = 4;
}

// Append entries request
message AppendEntriesRequestProto {
    uint64 term = 1;
    string leader_id = 2;
    uint64 prev_log_index = 3;
    uint64 prev_log_term = 4;
    repeated LogEntryProto entries = 5;
    uint64 leader_commit = 6;
}

// Append entries response
message AppendEntriesResponseProto {
    uint64 term = 1;
    bool success = 2;
    string follower_id = 3;
    uint64 last_log_index = 4;
}